version: "3.8"
name: certificate
services:
  certificate_api:
    build:
      context: certificate-api
      dockerfile: Dockerfile
    volumes:
      - ./certificate-api/:/app
    ports:
      - 5002:5002
    environment:
      - UVICORN_CMD=uvicorn main:app --reload --host 0.0.0.0 --port 5002
      - DATABASE_URL=postgresql://user:password@certificate_db_dev:5432/certificate_db_dev
      - POST_URL=http://httpbin:80/post
    depends_on:
      - certificate_db_dev
    networks:
      - certificate
  certificate_db_dev:
    image: postgres:15-alpine
    volumes:
      - pgcertificate-data-dev:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_SERVER=certificate_db_dev
      - POSTGRES_DB=certificate_db_dev
      - POSTGRES_PORT=5432
    ports:
      - "5432:5432"
    networks:
      - certificate
  httpbin:
    image: arnaudlacour/httpbin
    ports:
      - "85:85"
    networks:
      - certificate
  proxy:
    image: traefik:v2.10
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
      - "443:443"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - certificate
networks:
  certificate:
    driver: bridge
volumes:
  pgcertificate-data-dev:

  # certificate_db_read:
  #   image: postgres:15-alpine
  #   volumes:
  #     - pgcertificate-data-read:/var/lib/postgresql/data/
  #   environment:
  #     - POSTGRES_USER=user
  #     - POSTGRES_PASSWORD=password
  #     - POSTGRES_SERVER=certificate_db_read
  #     - POSTGRES_DB=certificate_db_read
  #     - POSTGRES_PORT=5433
  #   ports:
  #     - "5433:5433"
  #   networks:
  #     - certificate
